[buildout]

newest = true

package-name = openprocurement.integrations.treasury

parts =
    scripts
    test
    circus
    circusd
    circusctl
    log_dir
    circus.ini
    openprocurement.integrations.treasury.ini
    redis_db_dir
    redis.cfg
    omelette
    tests_requirments
eggs =
    gevent
    mock
    openprocurement_client
    esculator
    chaussette
    pyramid
    restkit
    retrying
    request_id_middleware
    server_cookie_middleware
    pytz
    redis

develop = .
extensions = mr.developer
auto-checkout = openprocurement_client openprocurement.integrations.treasury
show-picked-versions = true
find-links = http://op:x9W3jZ@dist.quintagroup.com/op/

[scripts]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
interpreter = python
scripts =
    chaussette
    nosetests
    circusd

[sources]
openprocurement_client = git https://github.com/openprocurement/openprocurement.client.python.git
openprocurement.integrations.treasury = git https://github.com/ProzorroUKR/openprocurement.integrations.treasury.git branch=databridge

[test]
recipe = zc.recipe.egg:scripts
dependent-scripts = true
eggs =
    openprocurement_client
    openprocurement.integrations.treasury [test]
    nose
    pyramid
    pytz

[log_dir]
recipe = z3c.recipe.mkdir
paths = ${buildout:directory}/var/log

[config-from-template]
recipe = collective.recipe.template[genshi]:genshi
input = ${buildout:directory}/templates/${:_buildout_section_name_}
output = ${buildout:directory}/etc/${:_buildout_section_name_}

[circus]
recipe = zc.recipe.egg
eggs =
    circus
    circus-web
interpreter =
scripts =
    circusd-stats
    circus-top
    circus-plugin
    circushttpd

[circusd]
<= circus
initialization =
    sys.argv[1:1] = ('${buildout:directory}/etc/circus.ini').split()
scripts = circusd

[circusctl]
<= circus
initialization =
    sys.argv[1:1] = ('--endpoint ${circus.ini:endpoint}').split()
scripts = circusctl

[circus.ini]
<= config-from-template
statsd = True
webapp = True
integrations_treasury = True
endpoint = ipc://${buildout:directory}/var/circus_endpoint
pubsub_endpoint = ipc://${buildout:directory}/var/circus_pubsub
timezone = Europe/Kiev
web_host = 0.0.0.0
web_port = 6543
redis = True

[redis_db_dir]
recipe = z3c.recipe.mkdir
paths = ${buildout:directory}/var/redis

[redis.cfg]
<= config-from-template
port = ${openprocurement.integrations.treasury.ini:cache_port}
dir = ${buildout:directory}/var/redis
logfile = ${buildout:directory}/var/log/redis.log

[openprocurement.integrations.treasury.ini]
<= config-from-template
debug = false
auth_file = ${buildout:directory}/auth.ini
tenders_api_server = https://public.api-sandbox.openprocurement.org
tenders_api_version = 2.4
public_tenders_api_server = https://public.api-sandbox.openprocurement.org
api_token = bot
buffers_size = 500
full_stack_sync_delay = 15
empty_stack_sync_delay = 101
on_error_sleep_delay = 5
delay = 15
cleaner_delay = 15
increment_step = 1
decrement_step = 1
web_host = 0.0.0.0
web_port = 6543
redis = true
cache_db_name = 0
cache_host = 127.0.0.1
cache_port = 6379
time_to_live = 1800
time_to_live_negative = 120
jobs_watcher_delay = 15
contracting_api_server = https://lb.api-sandbox.openprocurement.org
contracting_api_version = 0
plans_api_server = https://lb.api-sandbox.openprocurement.org
plans_api_version = 0

source = ${buildout:directory}/src/openprocurement.integrations.treasury/docs/source

[tests_requirments]
recipe = zc.recipe.egg:script
dependent-scripts = true
eggs =
     pylint
     pep8
     nose
     sphinx
     coverage
     ${buildout:eggs}

[omelette]
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}